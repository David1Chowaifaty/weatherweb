{"file":"cm-mainweather.js","mappings":";;;;;;AAAA,MAAM,gBAAgB,GAAG,qwCAAqwC;;MCSjxCA,eAAa;;;;;;;;EAIxB,UAAU,CAAC,EAAe;IACxB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC;GACvB;EAED,YAAY,CAAC,EAAe;IAC1B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC;GACvB;EACD,iBAAiB;IACf,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;MACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtC;GACF;EAGD,WAAW;IACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAY,CAAC;GACjD;EACD,UAAU,CAAC,IAAU;IACnB,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IACxC,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;IACxC,IAAI,WAAW,KAAK,OAAO,EAAE;MAC3B,OAAO,OAAO,CAAC;KAChB;SAAM;MACL,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;KAC5B;GACF;EACD,MAAM;IACJ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;MAC9B,OAAO,IAAI,CAAC;KACb;SAAM;MACL,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,cAAc,IACvB,WAAK,KAAK,EAAC,gBAAgB,IACzB,WAAK,KAAK,EAAC,cAAc,IACvB,uBAAiB,KAAK,EAAC,MAAM,GAAG,CAC5B,EACN,WAAK,KAAK,EAAC,MAAM,IACf,eAAS,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAY,CACnD,CACF,EACN,SAAG,KAAK,EAAC,qBAAqB,IAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAK,EAC7D,WAAK,KAAK,EAAE,mBAAmB,IAC7B,WAAK,KAAK,EAAC,SAAS,IAClB,uBAAiB,KAAK,EAAC,MAAM,GAAG,CAC5B,EACN,SAAG,KAAK,EAAC,mBAAmB,IAC1B,sBAAgB,KAAK,EAAC,UAAU,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAI,OAE3E,sBAAgB,KAAK,EAAC,UAAU,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAI,CACzE,CACA,CACF,EACN,WAAK,KAAK,EAAC,YAAY,IACrB,WAAK,KAAK,EAAC,SAAS,IAClB,SAAG,KAAK,EAAC,WAAW,iBACT,sBAAgB,KAAK,EAAC,YAAY,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAI,CACtF,EACJ,SAAG,KAAK,EAAC,UAAU,iBACR,YAAM,KAAK,EAAC,gBAAgB,IAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAQ,CAClE,EACJ,SAAG,KAAK,EAAC,MAAM,aACR,YAAM,KAAK,EAAC,YAAY,IAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAQ,CAC3D,CACA,CACF,CACD,EACP;KACH;GACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["CmMainweather"],"sources":["src/components/cm-mainweather/cm-mainweather.css?tag=cm-mainweather&encapsulation=shadow","src/components/cm-mainweather/cm-mainweather.tsx"],"sourcesContent":[":host {\r\n  display: flex;\r\n  border-radius: 20px;\r\n  background: #f8fafc;\r\n  height: min-content;\r\n  width: 30rem;\r\n  max-width: 85%;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  color: #475569;\r\n  position: relative;\r\n  gap: 20px;\r\n}\r\n.weather-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.weather-header {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.weather-icon {\r\n  height: 60px;\r\n  width: 60px;\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.temperature-range {\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.temp-max {\r\n  font-size: 26px;\r\n}\r\n.temp-min {\r\n  color: #64748b;\r\n}\r\n.weather-description {\r\n  margin: 0;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.extra-info {\r\n  display: none;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n.weather-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.sunmoon .icon {\r\n  display: none;\r\n}\r\n\r\n.real-feel,\r\n.humidity,\r\n.wind {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.humidity-value,\r\n.wind-speed {\r\n  font-weight: bold;\r\n}\r\n\r\n@media only screen and (min-width: 768px) {\r\n  :host {\r\n    justify-content: space-between;\r\n    width: 90%;\r\n  }\r\n  .weather-icon {\r\n    display: none;\r\n  }\r\n  .weather-container {\r\n    gap: 20px;\r\n  }\r\n  .sunmoon .icon {\r\n    display: block;\r\n    height: 60px;\r\n    width: 60px;\r\n  }\r\n  .extra-info {\r\n    display: block;\r\n    flex: 1;\r\n    max-width: 40%;\r\n  }\r\n  .details > p {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 992px) {\r\n  :host {\r\n    width: 70%;\r\n    padding: 2rem;\r\n    height: 10rem;\r\n  }\r\n  .sunmoon .icon {\r\n    height: 100px;\r\n    width: 100px;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 1200px) {\r\n}\r\n","import { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { Weather } from '../../model/Weather';\r\nimport { daysOfWeek } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'cm-mainweather',\r\n  styleUrl: 'cm-mainweather.css',\r\n  shadow: true,\r\n})\r\nexport class CmMainweather {\r\n  @Prop({ reflect: true, mutable: true }) data: string;\r\n  @State() weather: Weather;\r\n  @Listen('dayclicked', { target: 'body' })\r\n  changeData(ev: CustomEvent) {\r\n    this.data = ev.detail;\r\n  }\r\n  @Listen('itemClicked', { target: 'body' })\r\n  dropDownData(ev: CustomEvent) {\r\n    this.data = ev.detail;\r\n  }\r\n  componentWillLoad() {\r\n    if (this.data !== '') {\r\n      this.weather = JSON.parse(this.data);\r\n    }\r\n  }\r\n\r\n  @Watch('data')\r\n  changedData() {\r\n    this.weather = JSON.parse(this.data) as Weather;\r\n  }\r\n  renderDate(date: Date) {\r\n    const currentDate = new Date().getDay();\r\n    const newDate = new Date(date).getDay();\r\n    if (currentDate === newDate) {\r\n      return 'Today';\r\n    } else {\r\n      return daysOfWeek[newDate];\r\n    }\r\n  }\r\n  render() {\r\n    if (this.weather === undefined) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <Host>\r\n          <div class=\"weather-info\">\r\n            <div class=\"weather-header\">\r\n              <div class=\"weather-icon\">\r\n                <cm-sunmoonimage class=\"icon\" />\r\n              </div>\r\n              <div class=\"date\">\r\n                <cm-date date={this.weather.date.toString()}></cm-date>\r\n              </div>\r\n            </div>\r\n            <p class=\"weather-description\">{this.weather.description}</p>\r\n            <div class={'weather-container'}>\r\n              <div class=\"sunmoon\">\r\n                <cm-sunmoonimage class=\"icon\" />\r\n              </div>\r\n              <p class=\"temperature-range\">\r\n                <cm-temperature class=\"temp-max\" temp={this.weather.temp_max.toString()} />\r\n                /\r\n                <cm-temperature class=\"temp-min\" temp={this.weather.temp_min.toString()} />\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"extra-info\">\r\n            <div class=\"details\">\r\n              <p class=\"real-feel\">\r\n                RealFeel <cm-temperature class=\"feels-like\" temp={this.weather.feels_like.toString()} />\r\n              </p>\r\n              <p class=\"humidity\">\r\n                Humidity <span class=\"humidity-value\">{this.weather.humidity}</span>\r\n              </p>\r\n              <p class=\"wind\">\r\n                Wind <span class=\"wind-speed\">{this.weather.windspeed}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Host>\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"version":3}