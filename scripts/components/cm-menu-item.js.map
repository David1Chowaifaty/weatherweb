{"file":"cm-menu-item.js","mappings":";;;AAAA,MAAM,aAAa,GAAG,iOAAiO;;MCS1OA,YAAU;;;;;;;;;EAKrB,iBAAiB;IACf,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;MACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtC;GACF;EAGD,WAAW;IACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAY,CAAC;IAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GAC3B;EAED,WAAW;IACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAClC;EAGD,MAAM;IACJ,QACE,EAAC,IAAI,QACJ,WAAK,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IACpC,cAAK,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,CAAM,EAC3D,aAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAK,CAChC,CACL,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["CmMenuItem"],"sources":["src/components/cm-menu-item/cm-menu-item.css?tag=cm-menu-item&encapsulation=shadow","src/components/cm-menu-item/cm-menu-item.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\ndiv{\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding:0 10px;\r\n  border-radius: 5px;\r\n  \r\n}\r\ndiv:hover{\r\n  background-color: #f8fafc\r\n}\r\nh2{\r\n  font-size: 15px;\r\n}\r\np{\r\n  font-size: 15px;\r\n}","import { Component, EventEmitter, Host, Prop, State, h,Event, Watch } from '@stencil/core';\r\nimport { Weather } from '../../model/Weather';\r\nimport { daysOfWeek, formatDate } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'cm-menu-item',\r\n  styleUrl: 'cm-menu-item.css',\r\n  shadow: true,\r\n})\r\nexport class CmMenuItem {\r\n  @Prop({ reflect: true, mutable: true }) data: string;\r\n  @State() weather: Weather;\r\n  @Event({bubbles:true,composed:true})  itemClicked: EventEmitter<string>;\r\n\r\n  componentWillLoad() {\r\n    if (this.data !== '') {\r\n      this.weather = JSON.parse(this.data);\r\n    }\r\n  }\r\n\r\n  @Watch('data')\r\n  changedData() {\r\n    this.weather = JSON.parse(this.data) as Weather;\r\n    console.log(this.weather);\r\n  }\r\n\r\n  handleClick() {\r\n    this.itemClicked.emit(this.data);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n       <div onClick={this.handleClick.bind(this)}>\r\n            <h2>{daysOfWeek[new Date(this.weather.date).getDay()]}</h2>\r\n            <p>{formatDate(this.weather.date)}</p>\r\n            </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}