{"version":3,"names":["cmWeatherCss","CmWeather","componentWillLoad","this","data","weather","JSON","parse","changedData","console","log","handleClick","dayclicked","emit","render","undefined","h","Host","class","onClick","bind","daysOfWeek","Date","date","getDay","formatDate","temp","temp_max","toString","temp_min","description"],"sources":["src/components/cm-weather/cm-weather.css?tag=cm-weather&encapsulation=shadow","src/components/cm-weather/cm-weather.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  \r\n}\r\n.temperature-range {\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.temp-max {\r\n  font-size: 20px;\r\n}\r\n.temp-min {\r\n  color: #64748b;\r\n}\r\n.weather-button{\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border: 0;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  box-shadow: 36px 35px 47px -4px rgba(0, 0, 0, 0.07);\r\n  border-radius: 10px;\r\n  padding: 1rem;\r\n  width: 15rem;\r\n  transition: all 0.3s ease-in-out;  \r\n  height: 18rem;\r\n}\r\n.weather-button:hover{\r\n  transform: scale(1.05);\r\n}\r\n.sunmoon-image{ \r\n  height: 60px;\r\n  width: 60px;\r\n  margin-bottom: 30px;\r\n  margin-top: 20px;\r\n}\r\np,h2{\r\n  margin: 0;\r\n}\r\n.date{\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n}","import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { Weather } from '../../model/Weather';\r\nimport { daysOfWeek, formatDate } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'cm-weather',\r\n  styleUrl: 'cm-weather.css',\r\n  shadow: true,\r\n})\r\nexport class CmWeather {\r\n  @Prop({ reflect: true, mutable: true }) data: string;\r\n  @State() weather: Weather;\r\n  @Event({ bubbles: true, composed: true }) dayclicked: EventEmitter<string>;\r\n\r\n  componentWillLoad() {\r\n    if (this.data !== '') {\r\n      this.weather = JSON.parse(this.data);\r\n    }\r\n  }\r\n\r\n  @Watch('data')\r\n  changedData() {\r\n    this.weather = JSON.parse(this.data) as Weather;\r\n    console.log(this.weather);\r\n  }\r\n  handleClick() {\r\n    this.dayclicked.emit(this.data);\r\n  }\r\n\r\n  render() {\r\n    if (this.weather === undefined) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <Host>\r\n          <button class=\"weather-button\" onClick={this.handleClick.bind(this)}>\r\n            <h2 class=\"day-of-week\">{daysOfWeek[new Date(this.weather.date).getDay()]}</h2>\r\n            <p class=\"date\">{formatDate(this.weather.date)}</p>\r\n            <cm-sunmoonimage class=\"sunmoon-image\"></cm-sunmoonimage>\r\n            <p class=\"temperature-range\">\r\n              <cm-temperature class=\"temp-max\" temp={this.weather.temp_max.toString()} />\r\n              / <cm-temperature class=\"temp-min\" temp={this.weather.temp_min.toString()} />\r\n            </p>\r\n            <p class=\"weather-description\">{this.weather.description}</p>\r\n          </button>\r\n        </Host>\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":"oGAAA,MAAMA,EAAe,wkB,MCSRC,EAAS,M,2GAKpB,iBAAAC,GACE,GAAIC,KAAKC,OAAS,GAAI,CACpBD,KAAKE,QAAUC,KAAKC,MAAMJ,KAAKC,K,EAKnC,WAAAI,GACEL,KAAKE,QAAUC,KAAKC,MAAMJ,KAAKC,MAC/BK,QAAQC,IAAIP,KAAKE,Q,CAEnB,WAAAM,GACER,KAAKS,WAAWC,KAAKV,KAAKC,K,CAG5B,MAAAU,GACE,GAAIX,KAAKE,UAAYU,UAAW,CAC9B,OAAO,I,KACF,CACL,OACEC,EAACC,EAAI,KACHD,EAAA,UAAQE,MAAM,iBAAiBC,QAAShB,KAAKQ,YAAYS,KAAKjB,OAC5Da,EAAA,MAAIE,MAAM,eAAeG,EAAW,IAAIC,KAAKnB,KAAKE,QAAQkB,MAAMC,WAChER,EAAA,KAAGE,MAAM,QAAQO,EAAWtB,KAAKE,QAAQkB,OACzCP,EAAA,mBAAiBE,MAAM,kBACvBF,EAAA,KAAGE,MAAM,qBACPF,EAAA,kBAAgBE,MAAM,WAAWQ,KAAMvB,KAAKE,QAAQsB,SAASC,aAAc,KACzEZ,EAAA,kBAAgBE,MAAM,WAAWQ,KAAMvB,KAAKE,QAAQwB,SAASD,cAEjEZ,EAAA,KAAGE,MAAM,uBAAuBf,KAAKE,QAAQyB,c"}