{"version":3,"file":"cm-mainweather.js","sourceRoot":"","sources":["../../../src/components/cm-mainweather/cm-mainweather.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAE/E,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAO/C,MAAM,OAAO,aAAa;;;;;EAIxB,UAAU,CAAC,EAAe;IACxB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC;EACxB,CAAC;EAED,YAAY,CAAC,EAAe;IAC1B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC;EACxB,CAAC;EACD,iBAAiB;IACf,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;MACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtC;EACH,CAAC;EAGD,WAAW;IACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAY,CAAC;EAClD,CAAC;EACD,UAAU,CAAC,IAAU;IACnB,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IACxC,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;IACxC,IAAI,WAAW,KAAK,OAAO,EAAE;MAC3B,OAAO,OAAO,CAAC;KAChB;SAAM;MACL,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;KAC5B;EACH,CAAC;EACD,MAAM;IACJ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;MAC9B,OAAO,IAAI,CAAC;KACb;SAAM;MACL,OAAO,CACL,EAAC,IAAI;QACH,WAAK,KAAK,EAAC,cAAc;UACvB,WAAK,KAAK,EAAC,gBAAgB;YACzB,WAAK,KAAK,EAAC,cAAc;cACvB,uBAAiB,KAAK,EAAC,MAAM,GAAG,CAC5B;YACN,WAAK,KAAK,EAAC,MAAM;cACf,eAAS,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAY,CACnD,CACF;UACN,SAAG,KAAK,EAAC,qBAAqB,IAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAK;UAC7D,WAAK,KAAK,EAAE,mBAAmB;YAC7B,WAAK,KAAK,EAAC,SAAS;cAClB,uBAAiB,KAAK,EAAC,MAAM,GAAG,CAC5B;YACN,SAAG,KAAK,EAAC,mBAAmB;cAC1B,sBAAgB,KAAK,EAAC,UAAU,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAI;;cAE3E,sBAAgB,KAAK,EAAC,UAAU,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAI,CACzE,CACA,CACF;QACN,WAAK,KAAK,EAAC,YAAY;UACrB,WAAK,KAAK,EAAC,SAAS;YAClB,SAAG,KAAK,EAAC,WAAW;;cACT,sBAAgB,KAAK,EAAC,YAAY,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAI,CACtF;YACJ,SAAG,KAAK,EAAC,UAAU;;cACR,YAAM,KAAK,EAAC,gBAAgB,IAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAQ,CAClE;YACJ,SAAG,KAAK,EAAC,MAAM;;cACR,YAAM,KAAK,EAAC,YAAY,IAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAQ,CAC3D,CACA,CACF,CACD,CACR,CAAC;KACH;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { Weather } from '../../model/Weather';\r\nimport { daysOfWeek } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'cm-mainweather',\r\n  styleUrl: 'cm-mainweather.css',\r\n  shadow: true,\r\n})\r\nexport class CmMainweather {\r\n  @Prop({ reflect: true, mutable: true }) data: string;\r\n  @State() weather: Weather;\r\n  @Listen('dayclicked', { target: 'body' })\r\n  changeData(ev: CustomEvent) {\r\n    this.data = ev.detail;\r\n  }\r\n  @Listen('itemClicked', { target: 'body' })\r\n  dropDownData(ev: CustomEvent) {\r\n    this.data = ev.detail;\r\n  }\r\n  componentWillLoad() {\r\n    if (this.data !== '') {\r\n      this.weather = JSON.parse(this.data);\r\n    }\r\n  }\r\n\r\n  @Watch('data')\r\n  changedData() {\r\n    this.weather = JSON.parse(this.data) as Weather;\r\n  }\r\n  renderDate(date: Date) {\r\n    const currentDate = new Date().getDay();\r\n    const newDate = new Date(date).getDay();\r\n    if (currentDate === newDate) {\r\n      return 'Today';\r\n    } else {\r\n      return daysOfWeek[newDate];\r\n    }\r\n  }\r\n  render() {\r\n    if (this.weather === undefined) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <Host>\r\n          <div class=\"weather-info\">\r\n            <div class=\"weather-header\">\r\n              <div class=\"weather-icon\">\r\n                <cm-sunmoonimage class=\"icon\" />\r\n              </div>\r\n              <div class=\"date\">\r\n                <cm-date date={this.weather.date.toString()}></cm-date>\r\n              </div>\r\n            </div>\r\n            <p class=\"weather-description\">{this.weather.description}</p>\r\n            <div class={'weather-container'}>\r\n              <div class=\"sunmoon\">\r\n                <cm-sunmoonimage class=\"icon\" />\r\n              </div>\r\n              <p class=\"temperature-range\">\r\n                <cm-temperature class=\"temp-max\" temp={this.weather.temp_max.toString()} />\r\n                /\r\n                <cm-temperature class=\"temp-min\" temp={this.weather.temp_min.toString()} />\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"extra-info\">\r\n            <div class=\"details\">\r\n              <p class=\"real-feel\">\r\n                RealFeel <cm-temperature class=\"feels-like\" temp={this.weather.feels_like.toString()} />\r\n              </p>\r\n              <p class=\"humidity\">\r\n                Humidity <span class=\"humidity-value\">{this.weather.humidity}</span>\r\n              </p>\r\n              <p class=\"wind\">\r\n                Wind <span class=\"wind-speed\">{this.weather.windspeed}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Host>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]}